{"/home/travis/build/npmtest/node-npmtest-react-dates/test.js":"/* istanbul instrument in package npmtest_react_dates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-dates/lib.npmtest_react_dates.js":"/* istanbul instrument in package npmtest_react_dates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_dates = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_dates = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-dates/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-dates && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_dates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_dates\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_dates.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_dates.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_dates.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_dates.__dirname + '/lib.npmtest_react_dates.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/index.js":"var DateRangePicker = require('./lib/components/DateRangePicker').default;\nvar DateRangePickerInput = require('./lib/components/DateRangePickerInput').default;\nvar DateRangePickerInputController = require('./lib/components/DateRangePickerInputController').default;\nvar SingleDatePicker = require('./lib/components/SingleDatePicker').default;\nvar SingleDatePickerInput = require('./lib/components/SingleDatePickerInput').default;\nvar DayPicker = require('./lib/components/DayPicker').default;\nvar DayPickerRangeController = require('./lib/components/DayPickerRangeController').default;\nvar CalendarMonthGrid = require('./lib/components/CalendarMonthGrid').default;\nvar CalendarMonth = require('./lib/components/CalendarMonth').default;\nvar CalendarDay = require('./lib/components/CalendarDay').default;\n\nvar DateRangePickerShape = require('./lib/shapes/DateRangePickerShape').default;\nvar SingleDatePickerShape = require('./lib/shapes/SingleDatePickerShape').default;\n\nvar isInclusivelyAfterDay = require('./lib/utils/isInclusivelyAfterDay').default;\nvar isInclusivelyBeforeDay = require('./lib/utils/isInclusivelyBeforeDay').default;\nvar isNextDay = require('./lib/utils/isNextDay').default;\nvar isSameDay = require('./lib/utils/isSameDay').default;\n\nvar toISODateString = require('./lib/utils/toISODateString').default;\nvar toLocalizedDateString = require('./lib/utils/toLocalizedDateString').default;\nvar toMomentObject = require('./lib/utils/toMomentObject').default;\n\n\nmodule.exports = {\n  DateRangePicker: DateRangePicker,\n  SingleDatePicker: SingleDatePicker,\n\n  DateRangePickerInputController: DateRangePickerInputController,\n  DateRangePickerInput: DateRangePickerInput,\n  SingleDatePickerInput: SingleDatePickerInput,\n  DayPicker: DayPicker,\n  DayPickerRangeController: DayPickerRangeController,\n  CalendarMonthGrid: CalendarMonthGrid,\n  CalendarMonth: CalendarMonth,\n  CalendarDay: CalendarDay,\n\n  DateRangePickerShape: DateRangePickerShape,\n  SingleDatePickerShape: SingleDatePickerShape,\n\n  isInclusivelyAfterDay: isInclusivelyAfterDay,\n  isInclusivelyBeforeDay: isInclusivelyBeforeDay,\n  isNextDay: isNextDay,\n  isSameDay: isSameDay,\n\n  toISODateString: toISODateString,\n  toLocalizedDateString: toLocalizedDateString,\n  toMomentObject: toMomentObject,\n};\n","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/lib/components/DateRangePicker.js":"module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t  };\n\t}();\n\n\tvar _react = __webpack_require__(1);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _reactDom = __webpack_require__(23);\n\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\n\tvar _reactAddonsShallowCompare = __webpack_require__(3);\n\n\tvar _reactAddonsShallowCompare2 = _interopRequireDefault(_reactAddonsShallowCompare);\n\n\tvar _moment = __webpack_require__(6);\n\n\tvar _moment2 = _interopRequireDefault(_moment);\n\n\tvar _classnames = __webpack_require__(7);\n\n\tvar _classnames2 = _interopRequireDefault(_classnames);\n\n\tvar _reactPortal = __webpack_require__(24);\n\n\tvar _reactPortal2 = _interopRequireDefault(_reactPortal);\n\n\tvar _airbnbPropTypes = __webpack_require__(5);\n\n\tvar _consolidatedEvents = __webpack_require__(16);\n\n\tvar _defaultPhrases = __webpack_require__(8);\n\n\tvar _OutsideClickHandler = __webpack_require__(25);\n\n\tvar _OutsideClickHandler2 = _interopRequireDefault(_OutsideClickHandler);\n\n\tvar _getResponsiveContainerStyles = __webpack_require__(26);\n\n\tvar _getResponsiveContainerStyles2 = _interopRequireDefault(_getResponsiveContainerStyles);\n\n\tvar _isTouchDevice = __webpack_require__(22);\n\n\tvar _isTouchDevice2 = _interopRequireDefault(_isTouchDevice);\n\n\tvar _isInclusivelyAfterDay = __webpack_require__(27);\n\n\tvar _isInclusivelyAfterDay2 = _interopRequireDefault(_isInclusivelyAfterDay);\n\n\tvar _DateRangePickerInputController = __webpack_require__(28);\n\n\tvar _DateRangePickerInputController2 = _interopRequireDefault(_DateRangePickerInputController);\n\n\tvar _DayPickerRangeController = __webpack_require__(29);\n\n\tvar _DayPickerRangeController2 = _interopRequireDefault(_DayPickerRangeController);\n\n\tvar _close = __webpack_require__(30);\n\n\tvar _close2 = _interopRequireDefault(_close);\n\n\tvar _DateRangePickerShape = __webpack_require__(31);\n\n\tvar _DateRangePickerShape2 = _interopRequireDefault(_DateRangePickerShape);\n\n\tvar _constants = __webpack_require__(11);\n\n\tfunction _interopRequireDefault(obj) {\n\t  return obj && obj.__esModule ? obj : { 'default': obj };\n\t}\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t}\n\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t}\n\n\tvar propTypes = (0, _airbnbPropTypes.forbidExtraProps)(_DateRangePickerShape2['default']);\n\n\tvar defaultProps = {\n\t  // required props for a functional interactive DateRangePicker\n\t  startDate: null,\n\t  endDate: null,\n\t  focusedInput: null,\n\n\t  // input related props\n\t  startDateId: _constants.START_DATE,\n\t  startDatePlaceholderText: 'Start Date',\n\t  endDateId: _constants.END_DATE,\n\t  endDatePlaceholderText: 'End Date',\n\t  disabled: false,\n\t  required: false,\n\t  screenReaderInputMessage: '',\n\t  showClearDates: false,\n\t  showDefaultInputIcon: false,\n\t  customInputIcon: null,\n\t  customArrowIcon: null,\n\t  customCloseIcon: null,\n\n\t  // calendar presentation and interaction related props\n\t  orientation: _constants.HORIZONTAL_ORIENTATION,\n\t  anchorDirection: _constants.ANCHOR_LEFT,\n\t  horizontalMargin: 0,\n\t  withPortal: false,\n\t  withFullScreenPortal: false,\n\t  initialVisibleMonth: null,\n\t  numberOfMonths: 2,\n\t  keepOpenOnDateSelect: false,\n\t  reopenPickerOnClearDates: false,\n\t  renderCalendarInfo: null,\n\t  daySize: _constants.DAY_SIZE,\n\n\t  // navigation related props\n\t  navPrev: null,\n\t  navNext: null,\n\n\t  onPrevMonthClick: function () {\n\t    function onPrevMonthClick() {}\n\n\t    return onPrevMonthClick;\n\t  }(),\n\t  onNextMonthClick: function () {\n\t    function onNextMonthClick() {}\n\n\t    return onNextMonthClick;\n\t  }(),\n\t  onClose: function () {\n\t    function onClose() {}\n\n\t    return onClose;\n\t  }(),\n\n\t  // day presentation and interaction related props\n\t  renderDay: null,\n\t  minimumNights: 1,\n\t  enableOutsideDays: false,\n\t  isDayBlocked: function () {\n\t    function isDayBlocked() {\n\t      return false;\n\t    }\n\n\t    return isDayBlocked;\n\t  }(),\n\t  isOutsideRange: function () {\n\t    function isOutsideRange(day) {\n\t      return !(0, _isInclusivelyAfterDay2['default'])(day, (0, _moment2['default'])());\n\t    }\n\n\t    return isOutsideRange;\n\t  }(),\n\t  isDayHighlighted: function () {\n\t    function isDayHighlighted() {\n\t      return false;\n\t    }\n\n\t    return isDayHighlighted;\n\t  }(),\n\n\t  // internationalization\n\t  displayFormat: function () {\n\t    function displayFormat() {\n\t      return _moment2['default'].localeData().longDateFormat('L');\n\t    }\n\n\t    return displayFormat;\n\t  }(),\n\t  monthFormat: 'MMMM YYYY',\n\t  phrases: _defaultPhrases.DateRangePickerPhrases\n\t};\n\n\tvar DateRangePicker = function (_React$Component) {\n\t  _inherits(DateRangePicker, _React$Component);\n\n\t  function DateRangePicker(props) {\n\t    _classCallCheck(this, DateRangePicker);\n\n\t    var _this = _possibleConstructorReturn(this, (DateRangePicker.__proto__ || Object.getPrototypeOf(DateRangePicker)).call(this, props));\n\n\t    _this.state = {\n\t      dayPickerContainerStyles: {},\n\t      isDateRangePickerInputFocused: false,\n\t      isDayPickerFocused: false,\n\t      showKeyboardShortcuts: false\n\t    };\n\n\t    _this.isTouchDevice = false;\n\n\t    _this.onOutsideClick = _this.onOutsideClick.bind(_this);\n\t    _this.onDateRangePickerInputFocus = _this.onDateRangePickerInputFocus.bind(_this);\n\t    _this.onDayPickerFocus = _this.onDayPickerFocus.bind(_this);\n\t    _this.onDayPickerBlur = _this.onDayPickerBlur.bind(_this);\n\t    _this.showKeyboardShortcutsPanel = _this.showKeyboardShortcutsPanel.bind(_this);\n\n\t    _this.responsivizePickerPosition = _this.responsivizePickerPosition.bind(_this);\n\t    return _this;\n\t  }\n\n\t  _createClass(DateRangePicker, [{\n\t    key: 'componentDidMount',\n\t    value: function () {\n\t      function componentDidMount() {\n\t        this.resizeHandle = (0, _consolidatedEvents.addEventListener)(window, 'resize', this.responsivizePickerPosition, { passive: true });\n\t        this.responsivizePickerPosition();\n\n\t        if (this.props.focusedInput) {\n\t          this.setState({\n\t            isDateRangePickerInputFocused: true\n\t          });\n\t        }\n\n\t        this.isTouchDevice = (0, _isTouchDevice2['default'])();\n\t      }\n\n\t      return componentDidMount;\n\t    }()\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function () {\n\t      function shouldComponentUpdate(nextProps, nextState) {\n\t        return (0, _reactAddonsShallowCompare2['default'])(this, nextProps, nextState);\n\t      }\n\n\t      return shouldComponentUpdate;\n\t    }()\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function () {\n\t      function componentDidUpdate(prevProps) {\n\t        if (!prevProps.focusedInput && this.props.focusedInput && this.isOpened()) {\n\t          // The date picker just changed from being closed to being open.\n\t          this.responsivizePickerPosition();\n\t        }\n\t      }\n\n\t      return componentDidUpdate;\n\t    }()\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function () {\n\t      function componentWillUnmount() {\n\t        if (this.resizeHandle) (0, _consolidatedEvents.removeEventListener)(this.resizeHandle);\n\t      }\n\n\t      return componentWillUnmount;\n\t    }()\n\t  }, {\n\t    key: 'onOutsideClick',\n\t    value: function () {\n\t      function onOutsideClick() {\n\t        var _props = this.props;\n\t        var onFocusChange = _props.onFocusChange;\n\t        var onClose = _props.onClose;\n\t        var startDate = _props.startDate;\n\t        var endDate = _props.endDate;\n\n\t        if (!this.isOpened()) return;\n\n\t        this.setState({\n\t          isDateRangePickerInputFocused: false,\n\t          isDayPickerFocused: false,\n\t          showKeyboardShortcuts: false\n\t        });\n\n\t        onFocusChange(null);\n\t        onClose({ startDate: startDate, endDate: endDate });\n\t      }\n\n\t      return onOutsideClick;\n\t    }()\n\t  }, {\n\t    key: 'onDateRangePickerInputFocus',\n\t    value: function () {\n\t      function onDateRangePickerInputFocus(focusedInput) {\n\t        var _props2 = this.props;\n\t        var onFocusChange = _props2.onFocusChange;\n\t        var withPortal = _props2.withPortal;\n\t        var withFullScreenPortal = _props2.withFullScreenPortal;\n\n\t        if (focusedInput) {\n\t          var moveFocusToDayPicker = withPortal || withFullScreenPortal || this.isTouchDevice;\n\t          if (moveFocusToDayPicker) {\n\t            this.onDayPickerFocus();\n\t          } else {\n\t            this.onDayPickerBlur();\n\t          }\n\t        }\n\n\t        onFocusChange(focusedInput);\n\t      }\n\n\t      return onDateRangePickerInputFocus;\n\t    }()\n\t  }, {\n\t    key: 'onDayPickerFocus',\n\t    value: function () {\n\t      function onDayPickerFocus() {\n\t        var _props3 = this.props;\n\t        var focusedInput = _props3.focusedInput;\n\t        var onFocusChange = _props3.onFocusChange;\n\n\t        if (!focusedInput) onFocusChange(_constants.START_DATE);\n\n\t        this.setState({\n\t          isDateRangePickerInputFocused: false,\n\t          isDayPickerFocused: true,\n\t          showKeyboardShortcuts: false\n\t        });\n\t      }\n\n\t      return onDayPickerFocus;\n\t    }()\n\t  }, {\n\t    key: 'onDayPickerBlur',\n\t    value: function () {\n\t      function onDayPickerBlur() {\n\t        this.setState({\n\t          isDateRangePickerInputFocused: true,\n\t          isDayPickerFocused: false,\n\t          showKeyboardShortcuts: false\n\t        });\n\t      }\n\n\t      return onDayPickerBlur;\n\t    }()\n\t  }, {\n\t    key: 'getDayPickerContainerClasses',\n\t    value: function () {\n\t      function getDayPickerContainerClasses() {\n\t        var _props4 = this.props;\n\t        var orientation = _props4.orientation;\n\t        var withPortal = _props4.withPortal;\n\t        var withFullScreenPortal = _props4.withFullScreenPortal;\n\t        var anchorDirection = _props4.anchorDirection;\n\n\t        var dayPickerClassName = (0, _classnames2['default'])('DateRangePicker__picker', {\n\t          'DateRangePicker__picker--direction-left': anchorDirection === _constants.ANCHOR_LEFT,\n\t          'DateRangePicker__picker--direction-right': anchorDirection === _constants.ANCHOR_RIGHT,\n\t          'DateRangePicker__picker--horizontal': orientation === _constants.HORIZONTAL_ORIENTATION,\n\t          'DateRangePicker__picker--vertical': orientation === _constants.VERTICAL_ORIENTATION,\n\t          'DateRangePicker__picker--portal': withPortal || withFullScreenPortal,\n\t          'DateRangePicker__picker--full-screen-portal': withFullScreenPortal\n\t        });\n\n\t        return dayPickerClassName;\n\t      }\n\n\t      return getDayPickerContainerClasses;\n\t    }()\n\t  }, {\n\t    key: 'getDayPickerDOMNode',\n\t    value: function () {\n\t      function getDayPickerDOMNode() {\n\t        return _reactDom2['default'].findDOMNode(this.dayPicker); // eslint-disable-line react/no-find-dom-node\n\t      }\n\n\t      return getDayPickerDOMNode;\n\t    }()\n\t  }, {\n\t    key: 'isOpened',\n\t    value: function () {\n\t      function isOpened() {\n\t        var focusedInput = this.props.focusedInput;\n\n\t        return focusedInput === _constants.START_DATE || focusedInput === _constants.END_DATE;\n\t      }\n\n\t      return isOpened;\n\t    }()\n\t  }, {\n\t    key: 'responsivizePickerPosition',\n\t    value: function () {\n\t      function responsivizePickerPosition() {\n\t        if (!this.isOpened()) {\n\t          return;\n\t        }\n\n\t        var _props5 = this.props;\n\t        var anchorDirection = _props5.anchorDirection;\n\t        var horizontalMargin = _props5.horizontalMargin;\n\t        var withPortal = _props5.withPortal;\n\t        var withFullScreenPortal = _props5.withFullScreenPortal;\n\t        var dayPickerContainerStyles = this.state.dayPickerContainerStyles;\n\n\t        var isAnchoredLeft = anchorDirection === _constants.ANCHOR_LEFT;\n\t        if (!withPortal && !withFullScreenPortal) {\n\t          var containerRect = this.dayPickerContainer.getBoundingClientRect();\n\t          var currentOffset = dayPickerContainerStyles[anchorDirection] || 0;\n\t          var containerEdge = isAnchoredLeft ? containerRect[_constants.ANCHOR_RIGHT] : containerRect[_constants.ANCHOR_LEFT];\n\n\t          this.setState({\n\t            dayPickerContainerStyles: (0, _getResponsiveContainerStyles2['default'])(anchorDirection, currentOffset, containerEdge, horizontalMargin)\n\t          });\n\t        }\n\t      }\n\n\t      return responsivizePickerPosition;\n\t    }()\n\t  }, {\n\t    key: 'showKeyboardShortcutsPanel',\n\t    value: function () {\n\t      function showKeyboardShortcutsPanel() {\n\t        this.setState({\n\t          isDateRangePickerInputFocused: false,\n\t          isDayPickerFocused: true,\n\t          showKeyboardShortcuts: true\n\t        });\n\t      }\n\n\t      return showKeyboardShortcutsPanel;\n\t    }()\n\t  }, {\n\t    key: 'maybeRenderDayPickerWithPortal',\n\t    value: function () {\n\t      function maybeRenderDayPickerWithPortal() {\n\t        var _props6 = this.props;\n\t        var withPortal = _props6.withPortal;\n\t        var withFullScreenPortal = _props6.withFullScreenPortal;\n\n\t        if (!this.isOpened()) {\n\t          return null;\n\t        }\n\n\t        if (withPortal || withFullScreenPortal) {\n\t          return _react2['default'].createElement(_reactPortal2['default'], { isOpened: true }, this.renderDayPicker());\n\t        }\n\n\t        return this.renderDayPicker();\n\t      }\n\n\t      return maybeRenderDayPickerWithPortal;\n\t    }()\n\t  }, {\n\t    key: 'renderDayPicker',\n\t    value: function () {\n\t      function renderDayPicker() {\n\t        var _this2 = this;\n\n\t        var _props7 = this.props;\n\t        var isDayBlocked = _props7.isDayBlocked;\n\t        var isDayHighlighted = _props7.isDayHighlighted;\n\t        var isOutsideRange = _props7.isOutsideRange;\n\t        var numberOfMonths = _props7.numberOfMonths;\n\t        var orientation = _props7.orientation;\n\t        var monthFormat = _props7.monthFormat;\n\t        var navPrev = _props7.navPrev;\n\t        var navNext = _props7.navNext;\n\t        var onPrevMonthClick = _props7.onPrevMonthClick;\n\t        var onNextMonthClick = _props7.onNextMonthClick;\n\t        var onDatesChange = _props7.onDatesChange;\n\t        var onFocusChange = _props7.onFocusChange;\n\t        var withPortal = _props7.withPortal;\n\t        var withFullScreenPortal = _props7.withFullScreenPortal;\n\t        var daySize = _props7.daySize;\n\t        var enableOutsideDays = _props7.enableOutsideDays;\n\t        var focusedInput = _props7.focusedInput;\n\t        var startDate = _props7.startDate;\n\t        var endDate = _props7.endDate;\n\t        var minimumNights = _props7.minimumNights;\n\t        var keepOpenOnDateSelect = _props7.keepOpenOnDateSelect;\n\t        var renderDay = _props7.renderDay;\n\t        var renderCalendarInfo = _props7.renderCalendarInfo;\n\t        var initialVisibleMonth = _props7.initialVisibleMonth;\n\t        var customCloseIcon = _props7.customCloseIcon;\n\t        var onClose = _props7.onClose;\n\t        var phrases = _props7.phrases;\n\t        var _state = this.state;\n\t        var dayPickerContainerStyles = _state.dayPickerContainerStyles;\n\t        var isDayPickerFocused = _state.isDayPickerFocused;\n\t        var showKeyboardShortcuts = _state.showKeyboardShortcuts;\n\n\t        var onOutsideClick = !withFullScreenPortal && withPortal ? this.onOutsideClick : undefined;\n\t        var initialVisibleMonthThunk = initialVisibleMonth || function () {\n\t          return startDate || endDate || (0, _moment2['default'])();\n\t        };\n\n\t        var closeIcon = customCloseIcon || _react2['default'].createElement(_close2['default'], null);\n\n\t        return _react2['default'].createElement('div', { // eslint-disable-line jsx-a11y/no-static-element-interactions\n\t          ref: function () {\n\t            function ref(_ref2) {\n\t              _this2.dayPickerContainer = _ref2;\n\t            }\n\n\t            return ref;\n\t          }(),\n\t          className: this.getDayPickerContainerClasses(),\n\t          style: dayPickerContainerStyles,\n\t          onClick: onOutsideClick\n\t        }, _react2['default'].createElement(_DayPickerRangeController2['default'], {\n\t          ref: function () {\n\t            function ref(_ref) {\n\t              _this2.dayPicker = _ref;\n\t            }\n\n\t            return ref;\n\t          }(),\n\t          orientation: orientation,\n\t          enableOutsideDays: enableOutsideDays,\n\t          numberOfMonths: numberOfMonths,\n\t          onPrevMonthClick: onPrevMonthClick,\n\t          onNextMonthClick: onNextMonthClick,\n\t          onDatesChange: onDatesChange,\n\t          onFocusChange: onFocusChange,\n\t          onClose: onClose,\n\t          focusedInput: focusedInput,\n\t          startDate: startDate,\n\t          endDate: endDate,\n\t          monthFormat: monthFormat,\n\t          withPortal: withPortal || withFullScreenPortal,\n\t          daySize: daySize,\n\t          initialVisibleMonth: initialVisibleMonthThunk,\n\t          navPrev: navPrev,\n\t          navNext: navNext,\n\t          minimumNights: minimumNights,\n\t          isOutsideRange: isOutsideRange,\n\t          isDayHighlighted: isDayHighlighted,\n\t          isDayBlocked: isDayBlocked,\n\t          keepOpenOnDateSelect: keepOpenOnDateSelect,\n\t          renderDay: renderDay,\n\t          renderCalendarInfo: renderCalendarInfo,\n\t          isFocused: isDayPickerFocused,\n\t          showKeyboardShortcuts: showKeyboardShortcuts,\n\t          onBlur: this.onDayPickerBlur,\n\t          phrases: phrases\n\t        }), withFullScreenPortal && _react2['default'].createElement('button', {\n\t          className: 'DateRangePicker__close',\n\t          type: 'button',\n\t          onClick: this.onOutsideClick,\n\t          'aria-label': phrases.closeDatePicker\n\t        }, _react2['default'].createElement('div', { className: 'DateRangePicker__close' }, closeIcon)));\n\t      }\n\n\t      return renderDayPicker;\n\t    }()\n\t  }, {\n\t    key: 'render',\n\t    value: function () {\n\t      function render() {\n\t        var _props8 = this.props;\n\t        var startDate = _props8.startDate;\n\t        var startDateId = _props8.startDateId;\n\t        var startDatePlaceholderText = _props8.startDatePlaceholderText;\n\t        var endDate = _props8.endDate;\n\t        var endDateId = _props8.endDateId;\n\t        var endDatePlaceholderText = _props8.endDatePlaceholderText;\n\t        var focusedInput = _props8.focusedInput;\n\t        var screenReaderInputMessage = _props8.screenReaderInputMessage;\n\t        var showClearDates = _props8.showClearDates;\n\t        var showDefaultInputIcon = _props8.showDefaultInputIcon;\n\t        var customInputIcon = _props8.customInputIcon;\n\t        var customArrowIcon = _props8.customArrowIcon;\n\t        var customCloseIcon = _props8.customCloseIcon;\n\t        var disabled = _props8.disabled;\n\t        var required = _props8.required;\n\t        var phrases = _props8.phrases;\n\t        var isOutsideRange = _props8.isOutsideRange;\n\t        var withPortal = _props8.withPortal;\n\t        var withFullScreenPortal = _props8.withFullScreenPortal;\n\t        var displayFormat = _props8.displayFormat;\n\t        var reopenPickerOnClearDates = _props8.reopenPickerOnClearDates;\n\t        var keepOpenOnDateSelect = _props8.keepOpenOnDateSelect;\n\t        var onDatesChange = _props8.onDatesChange;\n\t        var onClose = _props8.onClose;\n\t        var isDateRangePickerInputFocused = this.state.isDateRangePickerInputFocused;\n\n\t        var onOutsideClick = !withPortal && !withFullScreenPortal ? this.onOutsideClick : undefined;\n\n\t        return _react2['default'].createElement('div', { className: 'DateRangePicker' }, _react2['default'].createElement(_OutsideClickHandler2['default'], { onOutsideClick: onOutsideClick }, _react2['default'].createElement(_DateRangePickerInputController2['default'], {\n\t          startDate: startDate,\n\t          startDateId: startDateId,\n\t          startDatePlaceholderText: startDatePlaceholderText,\n\t          isStartDateFocused: focusedInput === _constants.START_DATE,\n\t          endDate: endDate,\n\t          endDateId: endDateId,\n\t          endDatePlaceholderText: endDatePlaceholderText,\n\t          isEndDateFocused: focusedInput === _constants.END_DATE,\n\t          displayFormat: displayFormat,\n\t          showClearDates: showClearDates,\n\t          showCaret: !withPortal && !withFullScreenPortal,\n\t          showDefaultInputIcon: showDefaultInputIcon,\n\t          customInputIcon: customInputIcon,\n\t          customArrowIcon: customArrowIcon,\n\t          customCloseIcon: customCloseIcon,\n\t          disabled: disabled,\n\t          required: required,\n\t          reopenPickerOnClearDates: reopenPickerOnClearDates,\n\t          keepOpenOnDateSelect: keepOpenOnDateSelect,\n\t          isOutsideRange: isOutsideRange,\n\t          withFullScreenPortal: withFullScreenPortal,\n\t          onDatesChange: onDatesChange,\n\t          onFocusChange: this.onDateRangePickerInputFocus,\n\t          onArrowDown: this.onDayPickerFocus,\n\t          onQuestionMark: this.showKeyboardShortcutsPanel,\n\t          onClose: onClose,\n\t          phrases: phrases,\n\t          screenReaderMessage: screenReaderInputMessage,\n\t          isFocused: isDateRangePickerInputFocused\n\t        }), this.maybeRenderDayPickerWithPortal()));\n\t      }\n\n\t      return render;\n\t    }()\n\t  }]);\n\n\t  return DateRangePicker;\n\t}(_react2['default'].Component);\n\n\texports['default'] = DateRangePicker;\n\n\tDateRangePicker.propTypes = propTypes;\n\tDateRangePicker.defaultProps = defaultProps;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react-addons-shallow-compare\");\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"airbnb-prop-types\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"moment\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"classnames\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../defaultPhrases\");\n\n/***/ },\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../../constants\");\n\n/***/ },\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"consolidated-events\");\n\n/***/ },\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../utils/isTouchDevice\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react-dom\");\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react-portal\");\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"./OutsideClickHandler\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../utils/getResponsiveContainerStyles\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../utils/isInclusivelyAfterDay\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"./DateRangePickerInputController\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"./DayPickerRangeController\");\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _react = __webpack_require__(1);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tvar SVG = function (_React$Component) {\n\t  _inherits(SVG, _React$Component);\n\n\t  function SVG() {\n\t    _classCallCheck(this, SVG);\n\n\t    return _possibleConstructorReturn(this, (SVG.__proto__ || Object.getPrototypeOf(SVG)).apply(this, arguments));\n\t  }\n\n\t  _createClass(SVG, [{\n\t    key: \"render\",\n\t    value: function () {\n\t      function render() {\n\t        return _react2[\"default\"].createElement(\n\t          \"svg\",\n\t          _extends({ viewBox: \"0 0 12 12\" }, this.props),\n\t          _react2[\"default\"].createElement(\"path\", { fillRule: \"evenodd\", d: \"M11.53.47a.75.75 0 0 0-1.061 0l-4.47 4.47L1.529.47A.75.75 0 1 0 .468 1.531l4.47 4.47-4.47 4.47a.75.75 0 1 0 1.061 1.061l4.47-4.47 4.47 4.47a.75.75 0 1 0 1.061-1.061l-4.47-4.47 4.47-4.47a.75.75 0 0 0 0-1.061z\" })\n\t        );\n\t      }\n\n\t      return render;\n\t    }()\n\t  }]);\n\n\t  return SVG;\n\t}(_react2[\"default\"].Component);\n\n\texports[\"default\"] = SVG;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"../shapes/DateRangePickerShape\");\n\n/***/ }\n/******/ ]);","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/constants.js":"module.exports = {\n  DISPLAY_FORMAT: 'L',\n  ISO_FORMAT: 'YYYY-MM-DD',\n\n  START_DATE: 'startDate',\n  END_DATE: 'endDate',\n\n  HORIZONTAL_ORIENTATION: 'horizontal',\n  VERTICAL_ORIENTATION: 'vertical',\n  VERTICAL_SCROLLABLE: 'verticalScrollable',\n\n  ANCHOR_LEFT: 'left',\n  ANCHOR_RIGHT: 'right',\n\n  DAY_SIZE: 39,\n  BLOCKED_MODIFIER: 'blocked',\n};\n","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/karma.conf.js":"/* eslint no-param-reassign:0, import/no-extraneous-dependencies:0 */\nconst path = require('path');\nconst webpack = require('webpack');\n\nmodule.exports = (config) => {\n  config.set({\n    basePath: '',\n\n    frameworks: ['mocha', 'sinon', 'chai'],\n\n    files: [\n      'test/_helpers/restoreSinonStubs.js',\n      'test/utils/*',\n      'test/components/*',\n    ],\n\n    webpack: {\n      externals: {\n        sinon: true,\n      },\n      plugins: [\n        // https://github.com/cheeriojs/cheerio/issues/836\n        new webpack.NormalModuleReplacementPlugin(/^\\.\\/package$/, (result) => {\n          if (/cheerio/.test(result.context)) {\n            result.request = './package.json';\n          }\n        }),\n      ],\n      module: {\n        loaders: [\n          {\n            test: /\\.jsx?$/,\n            loader: 'babel-loader',\n            include: [\n              path.join(__dirname, 'src'),\n              path.join(__dirname, 'test'),\n              require.resolve('airbnb-js-shims'),\n            ],\n            query: {\n              presets: ['airbnb'],\n            },\n          },\n          {\n            test: /\\.svg$/,\n            loader: 'babel!react-svg',\n            include: [\n              path.join(__dirname, 'src'),\n            ],\n          },\n          { test: /\\.json$/, loader: 'json-loader' },\n\n          // Inject the Airbnb shims into the bundle\n          { test: /test\\/_helpers/, loader: 'imports?shims=airbnb-js-shims' },\n        ],\n      },\n      resolve: {\n        extensions: ['', '.js', '.jsx'],\n      },\n    },\n\n    webpackMiddleware: {\n      progress: false,\n      stats: false,\n      debug: false,\n      quiet: true,\n    },\n\n    preprocessors: {\n      'test/**/*': ['webpack'],\n    },\n\n    reporters: ['progress'],\n\n    port: 9876,\n\n    colors: true,\n\n    logLevel: config.LOG_INFO,\n\n    autoWatch: false,\n\n    browsers: ['Firefox'],\n\n    singleRun: true,\n\n    concurrency: Infinity,\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/lib/defaultPhrases.js":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar closeDatePicker = 'Close';\nvar focusStartDate = 'Interact with the calendar and add the check-in date for your trip.';\nvar clearDate = 'Clear Date';\nvar clearDates = 'Clear Dates';\nvar jumpToPrevMonth = 'Move backward to switch to the previous month';\nvar jumpToNextMonth = 'Move forward to switch to the next month';\nvar keyboardShortcuts = 'Keyboard Shortcuts';\nvar showKeyboardShortcutsPanel = 'Open the keyboard shortcuts panel';\nvar hideKeyboardShortcutsPanel = 'Close the shortcuts panel';\nvar openThisPanel = 'Open this panel';\nvar enterKey = 'Enter key';\nvar leftArrowRightArrow = 'Right and left arrow keys';\nvar upArrowDownArrow = 'up and down arrow keys';\nvar pageUpPageDown = 'page up and page down keys';\nvar homeEnd = 'Home and end keys';\nvar escape = 'Escape key';\nvar questionMark = 'Question mark';\nvar selectFocusedDate = 'Select the date in focus';\nvar moveFocusByOneDay = 'Move backward (left) and forward (right) by one day';\nvar moveFocusByOneWeek = 'Move backward (up) and forward (down) by one week';\nvar moveFocusByOneMonth = 'Switch months';\nvar moveFocustoStartAndEndOfWeek = 'Go to the first or last day of a week';\nvar returnFocusToInput = 'Return to the date input field';\nvar keyboardNavigationInstructions = 'Press the down arrow key to interact with the calendar and\\n  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.';\n\n// eslint-disable-next-line camelcase\nvar chooseAvailableStartDate = function chooseAvailableStartDate(_ref) {\n  var date = _ref.date;\n  return 'Choose ' + String(date) + ' as your check-in date. It\\'s available.';\n};\n\n// eslint-disable-next-line camelcase\nvar chooseAvailableEndDate = function chooseAvailableEndDate(_ref2) {\n  var date = _ref2.date;\n  return 'Choose ' + String(date) + ' as your check-out date. It\\'s available.';\n};\nvar chooseAvailableDate = function chooseAvailableDate(_ref3) {\n  var date = _ref3.date;\n  return date;\n};\nvar dateIsUnavailable = function dateIsUnavailable(_ref4) {\n  var date = _ref4.date;\n  return 'Not available. ' + String(date);\n};\n\nexports['default'] = {\n  closeDatePicker: closeDatePicker,\n  focusStartDate: focusStartDate,\n  clearDate: clearDate,\n  clearDates: clearDates,\n  jumpToPrevMonth: jumpToPrevMonth,\n  jumpToNextMonth: jumpToNextMonth,\n  keyboardShortcuts: keyboardShortcuts,\n  showKeyboardShortcutsPanel: showKeyboardShortcutsPanel,\n  hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n  openThisPanel: openThisPanel,\n  enterKey: enterKey,\n  leftArrowRightArrow: leftArrowRightArrow,\n  upArrowDownArrow: upArrowDownArrow,\n  pageUpPageDown: pageUpPageDown,\n  homeEnd: homeEnd,\n  escape: escape,\n  questionMark: questionMark,\n  selectFocusedDate: selectFocusedDate,\n  moveFocusByOneDay: moveFocusByOneDay,\n  moveFocusByOneWeek: moveFocusByOneWeek,\n  moveFocusByOneMonth: moveFocusByOneMonth,\n  moveFocustoStartAndEndOfWeek: moveFocustoStartAndEndOfWeek,\n  returnFocusToInput: returnFocusToInput,\n  keyboardNavigationInstructions: keyboardNavigationInstructions,\n\n  chooseAvailableStartDate: chooseAvailableStartDate,\n  chooseAvailableEndDate: chooseAvailableEndDate,\n  dateIsUnavailable: dateIsUnavailable\n};\nvar DateRangePickerPhrases = exports.DateRangePickerPhrases = {\n  closeDatePicker: closeDatePicker,\n  clearDates: clearDates,\n  focusStartDate: focusStartDate,\n  jumpToPrevMonth: jumpToPrevMonth,\n  jumpToNextMonth: jumpToNextMonth,\n  keyboardShortcuts: keyboardShortcuts,\n  showKeyboardShortcutsPanel: showKeyboardShortcutsPanel,\n  hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n  openThisPanel: openThisPanel,\n  enterKey: enterKey,\n  leftArrowRightArrow: leftArrowRightArrow,\n  upArrowDownArrow: upArrowDownArrow,\n  pageUpPageDown: pageUpPageDown,\n  homeEnd: homeEnd,\n  escape: escape,\n  questionMark: questionMark,\n  selectFocusedDate: selectFocusedDate,\n  moveFocusByOneDay: moveFocusByOneDay,\n  moveFocusByOneWeek: moveFocusByOneWeek,\n  moveFocusByOneMonth: moveFocusByOneMonth,\n  moveFocustoStartAndEndOfWeek: moveFocustoStartAndEndOfWeek,\n  returnFocusToInput: returnFocusToInput,\n  keyboardNavigationInstructions: keyboardNavigationInstructions,\n  chooseAvailableStartDate: chooseAvailableStartDate,\n  chooseAvailableEndDate: chooseAvailableEndDate,\n  dateIsUnavailable: dateIsUnavailable\n};\n\nvar DateRangePickerInputPhrases = exports.DateRangePickerInputPhrases = {\n  focusStartDate: focusStartDate,\n  clearDates: clearDates,\n  keyboardNavigationInstructions: keyboardNavigationInstructions\n};\n\nvar SingleDatePickerPhrases = exports.SingleDatePickerPhrases = {\n  closeDatePicker: closeDatePicker,\n  clearDate: clearDate,\n  jumpToPrevMonth: jumpToPrevMonth,\n  jumpToNextMonth: jumpToNextMonth,\n  keyboardShortcuts: keyboardShortcuts,\n  showKeyboardShortcutsPanel: showKeyboardShortcutsPanel,\n  hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n  openThisPanel: openThisPanel,\n  enterKey: enterKey,\n  leftArrowRightArrow: leftArrowRightArrow,\n  upArrowDownArrow: upArrowDownArrow,\n  pageUpPageDown: pageUpPageDown,\n  homeEnd: homeEnd,\n  escape: escape,\n  questionMark: questionMark,\n  selectFocusedDate: selectFocusedDate,\n  moveFocusByOneDay: moveFocusByOneDay,\n  moveFocusByOneWeek: moveFocusByOneWeek,\n  moveFocusByOneMonth: moveFocusByOneMonth,\n  moveFocustoStartAndEndOfWeek: moveFocustoStartAndEndOfWeek,\n  returnFocusToInput: returnFocusToInput,\n  keyboardNavigationInstructions: keyboardNavigationInstructions,\n  chooseAvailableDate: chooseAvailableDate,\n  dateIsUnavailable: dateIsUnavailable\n};\n\nvar SingleDatePickerInputPhrases = exports.SingleDatePickerInputPhrases = {\n  clearDate: clearDate,\n  keyboardNavigationInstructions: keyboardNavigationInstructions\n};\n\nvar DayPickerPhrases = exports.DayPickerPhrases = {\n  jumpToPrevMonth: jumpToPrevMonth,\n  jumpToNextMonth: jumpToNextMonth,\n  keyboardShortcuts: keyboardShortcuts,\n  showKeyboardShortcutsPanel: showKeyboardShortcutsPanel,\n  hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n  openThisPanel: openThisPanel,\n  enterKey: enterKey,\n  leftArrowRightArrow: leftArrowRightArrow,\n  upArrowDownArrow: upArrowDownArrow,\n  pageUpPageDown: pageUpPageDown,\n  homeEnd: homeEnd,\n  escape: escape,\n  questionMark: questionMark,\n  selectFocusedDate: selectFocusedDate,\n  moveFocusByOneDay: moveFocusByOneDay,\n  moveFocusByOneWeek: moveFocusByOneWeek,\n  moveFocusByOneMonth: moveFocusByOneMonth,\n  moveFocustoStartAndEndOfWeek: moveFocustoStartAndEndOfWeek,\n  returnFocusToInput: returnFocusToInput,\n  chooseAvailableStartDate: chooseAvailableStartDate,\n  chooseAvailableEndDate: chooseAvailableEndDate,\n  chooseAvailableDate: chooseAvailableDate,\n  dateIsUnavailable: dateIsUnavailable\n};\n\nvar DayPickerKeyboardShortcutsPhrases = exports.DayPickerKeyboardShortcutsPhrases = {\n  keyboardShortcuts: keyboardShortcuts,\n  showKeyboardShortcutsPanel: showKeyboardShortcutsPanel,\n  hideKeyboardShortcutsPanel: hideKeyboardShortcutsPanel,\n  openThisPanel: openThisPanel,\n  enterKey: enterKey,\n  leftArrowRightArrow: leftArrowRightArrow,\n  upArrowDownArrow: upArrowDownArrow,\n  pageUpPageDown: pageUpPageDown,\n  homeEnd: homeEnd,\n  escape: escape,\n  questionMark: questionMark,\n  selectFocusedDate: selectFocusedDate,\n  moveFocusByOneDay: moveFocusByOneDay,\n  moveFocusByOneWeek: moveFocusByOneWeek,\n  moveFocusByOneMonth: moveFocusByOneMonth,\n  moveFocustoStartAndEndOfWeek: moveFocustoStartAndEndOfWeek,\n  returnFocusToInput: returnFocusToInput\n};\n\nvar DayPickerNavigationPhrases = exports.DayPickerNavigationPhrases = {\n  jumpToPrevMonth: jumpToPrevMonth,\n  jumpToNextMonth: jumpToNextMonth\n};\n\nvar CalendarDayPhrases = exports.CalendarDayPhrases = {\n  chooseAvailableDate: chooseAvailableDate,\n  dateIsUnavailable: dateIsUnavailable\n};","/home/travis/build/npmtest/node-npmtest-react-dates/node_modules/react-dates/webpack.config.js":"const path = require('path');\nconst fs = require('fs');\n\nconst srcFolder = path.join(__dirname, 'src', 'components');\nconst components = fs.readdirSync(srcFolder);\n\nconst files = [];\nconst entries = {};\ncomponents.forEach(component => {\n  const name = component.split('.')[0];\n  const file = `./src/components/${name}`;\n  files.push(file);\n  entries[name] = file;\n});\n\nmodule.exports = {\n  entry: entries,\n  output: {\n    filename: '[name].js',\n    path: './lib/components/',\n    libraryTarget: 'commonjs2',\n  },\n  externals(context, request, callback) {\n    // Do not treat icon files as external\n    if (files.indexOf(request) > -1) {\n      return callback(null, false);\n    }\n    // Do not treat SVG files as external\n    if (/svg$/.test(request)) {\n      return callback(null, false);\n    }\n    // Treat all other files as external\n    return callback(null, true);\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js/,\n        loader: 'babel-loader',\n        include: path.join(__dirname, 'src'),\n        query: {\n          presets: ['airbnb']\n        }\n      },\n      {\n        test: /\\.jsx/,\n        loader: 'babel-loader',\n        include: path.join(__dirname, 'src'),\n        query: {\n          presets: ['airbnb']\n        }\n      },\n      // react-svg loads svg files as react components\n      { test: /\\.svg$/, loader: 'babel!react-svg', include: path.join(__dirname, 'src') },\n    ],\n  },\n  resolve: {\n    extensions: ['', '.js', '.jsx'],\n  },\n};\n"}